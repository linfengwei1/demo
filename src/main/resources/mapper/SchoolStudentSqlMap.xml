<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.great.dao.SchoolStudentDao">

    <resultMap id="Student" type="com.great.entity.Student">
        <result column="school_id" property="school_id"></result>
        <result column="student_state_id" property="student_state_id"></result>
    </resultMap>
    <!--查询教练记录并分页    -->
    <select id="findStudentByPage" resultMap="Student" parameterType="com.great.entity.TableUtils">
        select * from student
        <where>
            school_id = #{school_id}
            <if test="name !='' and name!=null">
                and name like concat('%',#{name},'%')
            </if>
            <if test="phone !='' and phone!=null">
                and phone = #{phone}
            </if>
            <if test="state !='' and state!=null">
                and student_state_id = #{state}
            </if>
            <if test="idnumber!= '' and idnumber != null">
                and idnumber= #{idnumber}
            </if>
            <if test="sex != '' and sex != null">
                and sex = #{sex}
            </if>
        </where>
        limit #{minLimit},#{maxLimit}
    </select>

    <!--查询驾校管理员信息总数-->
    <select id="findCount" resultType="java.lang.Integer" parameterType="com.great.entity.TableUtils">
        select count(*) from student
        <where>
            school_id = #{school_id}
            <if test="name !='' and name!=null">
                and name like concat('%',#{name},'%')
            </if>
            <if test="phone !='' and phone!=null">
                and phone = #{phone}
            </if>
            <if test="state !='' and state!=null">
                and student_state_id = #{state}
            </if>
            <if test="idNumber!= '' and idNumber != null">
                and idnumber= #{idNumber}
            </if>
            <if test="sex != '' and sex != null">
                and sex = #{sex}
            </if>
        </where>

    </select>

    <!--删除教练-->
    <delete id="deleteStudent"  parameterType="java.lang.Integer">
        delete  from student where id =#{id}
    </delete>

    <!--更新学员信息-->
    <update id="updateStudent" parameterType="com.great.entity.Student" >
        update student  set name = #{name},phone =#{phone}  where id =#{id}
    </update>

    <!--查看账号是否被使用-->
    <select id="CheckStudentAccount" parameterType = "String" resultType="java.lang.Integer">
        select count(id) FROM student where account= #{account}
    </select>


    <!--添加学员-->
    <!--useGeneratedKeys="true" keyProperty="id" 这两个属性一定不能少,设置插入获取自增长id，看service的操作-->
    <insert id="addStudent"   parameterType="com.great.entity.Student" useGeneratedKeys="true" keyProperty="id">
		insert into student (account,pwd,name,sex,age,idnumber,phone,student_state_id,school_id,image,coach_id)
		VALUES(#{account},#{pwd},#{name},#{sex},#{age},#{idNumber},#{phone},#{student_state_id},#{school_id},#{image},#{coach_id})
	</insert>

    <!--添加学员学时表-->
    <insert id="addStudyCondition"   parameterType="com.great.entity.StudyCondition">
		insert into studycondition (subject_id,time,practise_score,student_id) VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            (
            #{item.subject_id},
            #{item.time},
            #{item.practise_score},
            #{item.student_id}
            )
        </foreach>
	</insert>


    <!--单独插入图片-->
    <update id="AddStudentImage"   parameterType="java.util.Map">
		 update student  set image = #{image} where id =#{id}
	</update>

    <!--修改状态-->
    <update id="ChangeStudentState"   parameterType="java.util.Map">
		 update student  set student_state_id = #{student_state_id} where id =#{id}
	</update>


    <!--查找学员所有信息-->
    <select id="findAllStudent" resultType="Student" parameterType = "java.lang.Integer" >
		select * from student where school_id = #{school_id}
	</select>


    <resultMap id="StudyCondition" type="com.great.entity.StudyCondition">
        <result column="student_id" property="student_id"></result>
        <result column="subject_id" property="subject_id"></result>
    </resultMap>
    <!--查找学员学习时间-->
    <select id="findStudyTime" resultMap="StudyCondition" parameterType = "java.lang.Integer" >
		select * from studycondition where student_id = #{student_id}
	</select>



    <!--判断excel插入的账号是否被注册-->
    <select id="CheckAccount" parameterType = "String" resultType="java.lang.String">
        select account FROM student where account= #{account}
    </select>


    <!--excel插入数据库-->
    <insert id="insertStudentByExcel" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into student (account,pwd,name,sex,age,idnumber,phone,student_state_id,school_id,coach_id)values
        <foreach collection="list" item="item" index="index"
                 separator="," >
            (
            #{item.account},
            #{item.pwd},
            #{item.name},
            #{item.sex},
            #{item.age},
            #{item.idNumber},
            #{item.phone},
            #{item.student_state_id},
            #{item.school_id},
            #{item.coach_id}
            )
        </foreach>
    </insert>


    <!--统计一阶段的人数-->
    <select id="CountSubject1" resultType="Integer" parameterType = "Integer"  >
		SELECT count(*) FROM student where student_state_id in (1,13) and school_id = #{id}
	</select>
    <!--统计2阶段的人数-->
    <select id="CountSubject2" resultType="Integer" parameterType = "Integer"  >
		SELECT count(*) FROM student where student_state_id in (2,14) and school_id = #{id}
	</select>
    <!--统计3阶段的人数-->
    <select id="CountSubject3" resultType="Integer"  parameterType = "Integer" >
		SELECT count(*) FROM student where student_state_id in (3,15) and school_id = #{id}
	</select>
    <!--统计4阶段的人数-->
    <select id="CountSubject4" resultType="Integer" parameterType = "Integer" >
		SELECT count(*) FROM student where student_state_id in (4,16) and school_id = #{id}
	</select>

    <!--统毕业的人数-->
    <select id="CountOver" resultType="Integer"  parameterType = "Integer" >
		SELECT count(*) FROM student where student_state_id = 7 and school_id = #{id}
	</select>

    <!--批量审核学员预约时间通过-->
    <update id="changeAppointState" parameterType="java.util.List" >
        update appoint_time_relation set appoint_state_id = 4 where id in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>

    <!--单个审核学员预约时间通过或驳回-->
    <update id="auditAppoint" parameterType="java.util.Map">
        update appoint_time_relation
        <set>
            appoint_state_id=#{state}
        </set>
        <where>
            id=#{id}
        </where>
    </update>



    <!--批量审核学员预约时间不通过-->
    <update id="batchRejected" parameterType="java.util.List" >
        update appoint_time_relation set appoint_state_id = 2 where id in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>


    <!--把学员是否预约批量改成0-->
    <update id="AppointNo" parameterType="java.util.List" >
        update student set hasordered = 0 where id in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>

    <!--判断是否已经预约单个改为0-->
    <update id="AppointNoByOne" parameterType="java.lang.Integer">
        update student
        <set>
            hasordered=0
        </set>
        <where>
            id=#{id}
        </where>
    </update>
    

    <!--封装预约类-->
    <resultMap id="appointMap" type="com.great.entity.AppointTest">
        <id property="id" column="id"/>
        <result property="timeId" column="timeId"/>
        <result property="studentId" column="studentId"/>
        <result property="subjectId" column="subjectId"/>
        <result property="appointStateId" column="appointStateId"/>
        <result property="studentName" column="studentName"/>
        <result property="studentSex" column="studentSex"/>
        <result property="studentAge" column="studentAge"/>
        <result property="studentPhone" column="studentPhone"/>
        <result property="subjectName" column="subjectName"/>
        <result property="dateTime" column="dateTime"/>
        <result property="coachName" column="coachName"/>
    </resultMap>

    <!--获取预约条数-->
    <select id="getAppointCount" resultType="java.lang.Integer" parameterType="com.great.entity.TableUtils">
        select count(*)
        from appoint_time_relation atr
        left join student s2 on atr.student_id = s2.id
        left join coach s3 on s2.coach_id = s3.id
        <where>
            s2.school_id = #{school_id}
            <if test="name != '' and name != null">
                s2.name=#{name}
            </if>
            <if test="coachName != '' and coachName != null">
                s3.name=#{coachName}
            </if>
            and atr.appoint_state_id=3
        </where>

    </select>

    <!--获取预约记录-->
    <select id="getAppointTbl" resultMap="appointMap" parameterType="com.great.entity.TableUtils">
        select
        atr.id,
        atr.time_id "timeId",
        atr.student_id "studentId",
        t.subject_id "subjectId",
        atr.appoint_state_id "appointStateId",
        s2.name "studentName",
        s2.sex "studentSex",
        s2.age "studentAge",
        s2.phone "studentPhone",
        s2.coach_id ,
        s.name "subjectName",
        t.datetime "dateTime",
        s3.name "coachName"
        from appoint_time_relation atr
        left join time t on atr.time_id = t.id
        left join subject s on t.subject_id = s.id
        left join student s2 on atr.student_id = s2.id
        left join appoint_state as1 on atr.appoint_state_id = as1.id
        left join coach s3 on s2.coach_id = s3.id
        <where>
            s2.school_id = #{school_id}
            <if test="name != '' and name != null">
                s2.name=#{name}
            </if>
            <if test="coachName != '' and coachName != null">
                s3.name=#{coachName}
            </if>
            and atr.appoint_state_id=3
        </where>
        limit #{minLimit},#{maxLimit}


    </select>




</mapper>