<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.great.dao.TransportationDao">

<!--登录验证-->
	<select id="login" resultType="com.great.entity.Transportation" parameterType="java.util.Map">
		select * from transportation where account = #{account} and pwd = #{pwd}
	</select>

<!--获取科目一题数-->
	<select id="getOneSubjectCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(*)
		from question1
		<where>
			<if test="question!=null">
				and  question like concat('%',#{question},'%')
			</if>
			<if test="type!=null">
				and type = #{type}
			</if>
		</where>
	</select>

<!--获取科目一题目表-->
	<select id="getOneSubject" resultType="com.great.entity.Subject" parameterType="java.util.Map">
		select *
		from question1
		<where>
			<if test="question!=null">
				and  question like concat('%',#{question},'%')
			</if>
			<if test="type!=null">
				and type = #{type}
			</if>
		</where>
		limit #{minlimit} , #{maxlimit}
	</select>

<!--获取科目四题数-->
	<select id="getFourthSubjectCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(*)
		from question4
		<where>
			<if test="question!=null">
				and  question like concat('%',#{question},'%')
			</if>
			<if test="type!=null">
				and type = #{type}
			</if>
		</where>
	</select>

<!--获取科目四题目表-->
	<select id="getFourthSubject" resultType="com.great.entity.Subject" parameterType="java.util.Map">
		select *
		from question4
		<where>
			<if test="question!=null">
				and  question like concat('%',#{question},'%')
			</if>
			<if test="type!=null">
				and type = #{type}
			</if>
		</where>
		limit #{minlimit} , #{maxlimit}
	</select>

<!--获取科目一题目信息-->
	<select id="getOneSubjectMsg" resultType="com.great.entity.Subject" parameterType="java.lang.Integer">
		select * from question1 where id=#{id}
	</select>

<!--获取科目四题目信息-->
	<select id="getFourthSubjectMsg" resultType="com.great.entity.Subject" parameterType="java.lang.Integer">
		select * from question4 where id=#{id}
	</select>

<!--删除科目一题目-->
	<delete id="deleteOneSubjectMsg" parameterType="java.lang.Integer">
		delete from question1 where id=#{id}
	</delete>

<!--删除科目四题目-->
	<delete id="deleteFourthSubjectMsg" parameterType="java.lang.Integer">
		delete from question4 where id=#{id}
	</delete>

<!--更新科目一信息-->
	<update id="updateOneSubjectMsg" parameterType="com.great.entity.Subject">

		update question1
		<set>
			<if test="question!=null">
				question=#{question}
			</if>
			<if test="answer!=null">
				,answer=#{answer}
			</if>
			<if test="item1!=null">
				,item1=#{item1}
			</if>
			<if test="item2!=null">
				,item2=#{item2}
			</if>
			<if test="item3!=null">
				,item3=#{item3}
			</if>
			<if test="item4!=null">
				,item4=#{item4}
			</if>
			<if test="type!=null">
				,type=#{type}
			</if>
			<if test="url!=null">
				,url=#{url}
			</if>
		</set>
		where id=#{id}

	</update>

<!--更新科目四信息-->
	<update id="updateFourthSubjectMsg" parameterType="com.great.entity.Subject">
		update question4
		<set>
			<if test="question!=null">
				question=#{question}
			</if>
			<if test="answer!=null">
				,answer=#{answer}
			</if>
			<if test="item1!=null">
				,item1=#{item1}
			</if>
			<if test="item2!=null">
				,item2=#{item2}
			</if>
			<if test="item3!=null">
				,item3=#{item3}
			</if>
			<if test="item4!=null">
				,item4=#{item4}
			</if>
			<if test="type!=null">
				,type=#{type}
			</if>
			<if test="url!=null">
				,url=#{url}
			</if>
		</set>
		where id=#{id}
	</update>

<!--获取学员数-->
	<select id="getStudentCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
		select count(*)
		from student
		<where>
			<if test="name!=null">
				and  name like concat('%',#{name},'%')
			</if>
			<if test="state!=null">
				and student_state_id = #{state}
			</if>
			<if test="school_id!=null">
				and school_id = #{school_id}
			</if>
		</where>
	</select>

<!--封装学员查询的结果集-->
	<resultMap id="studentMap" type="com.great.entity.Student">
		<id property="id" column="id"/>
		<result property="account" column="account"/>
		<result property="pwd" column="pwd"/>
		<result property="name" column="name"/>
		<result property="sex" column="sex"/>
		<result property="age" column="age"/>
		<result property="idNumber" column="idNumber"/>
		<result property="phone" column="phone"/>
		<result property="student_state_id" column="student_state_id"/>
		<result property="school_id" column="school_id"/>
		<result property="schoolName" column="s_name"/>
		<result property="image" column="image"/>
		<result property="audit_results" column="audit_results"/>

	<association property="school" javaType="com.great.entity.School">
		<id property="id" column="s_id"/>
		<result property="name" column="s_name"/>
		<result property="phone" column="s_phone"/>
		<result property="address" column="s_address"/>
		<result property="admin" column="s_admin"/>
		<result property="intro" column="s_intro"/>
		<result property="school_state_id" column="school_state_id"/>
		<result property="information" column="s_information"/>
	</association>

	</resultMap>

<!--获取学员列表-->
	<select id="getStudentTbl" resultMap="studentMap" parameterType="java.util.Map">
		select s1.*
		     ,s.id "s_id"
		     ,s.name "s_name"
			,s.admin "s_admin"
			,s.address "s_address"
			,s.information "s_information"
			,s.intro "s_intro"
			,s.phone "s_phone"
			,s.school_state_id "school_state_id"
		from student s1
		left join school s on s1.school_id = s.id
		<where>
			<if test="name!=null">
				and  s1.name like concat('%',#{name},'%')
			</if>
			<if test="student_state_id!=null">
				and s1.student_state_id = #{student_state_id}
			</if>
			<if test="school_id!=null">
				and s1.school_id = #{school_id}
			</if>
		</where>
		limit #{minlimit} , #{maxlimit}
	</select>

<!--获取所有学校-->
	<select id="getSchoolList" resultType="com.great.entity.School">
		select * from school
	</select>

<!--获取所有学员状态-->
	<select id="getStudentState" resultType="java.lang.String">
		select statename from studentstate;
	</select>

<!--获取学校记录数-->
	<select id="getSchoolCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
		select count(*)
		from school
		<where>
			<if test="name!=null">
				and  name like concat('%',#{name},'%')
			</if>
			<if test="state!=null">
				and school_state_id = #{state}
			</if>
			<if test="type!=null">
				and student_state_id = #{type}
			</if>
		</where>
	</select>

<!--封装学校查询的结果集-->
	<resultMap id="schoolMap" type="com.great.entity.School">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="phone" column="phone"/>
		<result property="address" column="address"/>
		<result property="admin" column="admin"/>
		<result property="intro" column="intro"/>
		<result property="school_state_id" column="school_state_id"/>
		<result property="information" column="information"/>
		<result property="audit_results" column="audit_results"/>
	</resultMap>

<!--获取学校列表-->
	<select id="getSchoolTbl" resultMap="schoolMap" parameterType="java.util.Map" >
		select *
		from school
		<where>
			<if test="name!=null">
				and  name like concat('%',#{name},'%')
			</if>
			<if test="state!=null">
				and school_state_id = #{state}
			</if>
			<if test="type!=null">
				and student_state_id = #{type}
			</if>
		</where>
		limit #{minlimit} , #{maxlimit}
	</select>

<!--获取所有学校状态-->
	<select id="getSchoolState" resultType="java.lang.String">
		select statename from schoolstate;
	</select>

<!--获取学校信息-->
	<select id="getSchoolMsg" resultType="com.great.entity.School" parameterType="java.lang.Integer">
		select *
		from school where id=#{id};
	</select>

<!--封装教练结果集-->
	<resultMap id="coachMap" type="com.great.entity.Coach">
		<id property="id" column="id"/>
		<result property="account" column="account"/>
		<result property="pwd" column="pwd"/>
		<result property="sex" column="sex"/>
		<result property="name" column="name"/>
		<result property="phone" column="phone"/>
		<result property="age" column="age"/>
		<result property="image" column="image"/>
		<result property="idnumber" column="idnumber"/>
		<result property="coach_state_id" column="coach_state_id"/>
		<result property="schoolName" column="s_name"/>
		<result property="audit_results" column="audit_results"/>

	</resultMap>

	<select id="getCoachTbl" resultMap="coachMap" parameterType="java.util.Map" >
		select c.*
		,s.id "s_id"
		,s.name "s_name"
		,s.admin "s_admin"
		,s.address "s_address"
		,s.information "s_information"
		,s.intro "s_intro"
		,s.phone "s_phone"
		,s.school_state_id "school_state_id"
		from coach c
		left join school s on c.school_id = s.id
		<where>
			<if test="name!=null">
				and  c.name like concat('%',#{name},'%')
			</if>
			<if test="state!=null">
				and c.school_id = #{state}
			</if>
			<if test="sex!=null">
				and c.sex = #{sex}
			</if>
			<if test="type!=null">
				and c.coach_state_id = #{type}
			</if>
		</where>
		limit #{minlimit} , #{maxlimit}
	</select>

<!--获取教练记录数-->
	<select id="getCoachCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
		select count(*)
		from coach
		<where>
			<if test="name!=null">
				and  name like concat('%',#{name},'%')
			</if>
			<if test="state!=null">
				and school_id = #{state}
			</if>
			<if test="sex!=null">
				and sex = #{sex}
			</if>
			<if test="type!=null">
				and coach_state_id = #{type}
			</if>
		</where>

	</select>

<!--获取所有教练状态-->
	<select id="getCoachState" resultType="java.lang.String">
		select statename from coachstate;
	</select>

<!--获取教练信息-->
	<select id="getCoachMsg" resultMap="coachMap" parameterType="java.lang.Integer">
		select c.*
		,s.id "s_id"
		,s.name "s_name"
		,s.admin "s_admin"
		,s.address "s_address"
		,s.information "s_information"
		,s.intro "s_intro"
		,s.phone "s_phone"
		,s.school_state_id "school_state_id"
		from coach c
		left join school s on c.school_id = s.id
		<where>
			c.id=#{id}
		</where>
	</select>

<!--封装学员查询结果集-->
	<resultMap id="studentMsg" type="com.great.entity.Student">
		<id property="id" column="id"/>
		<result property="account" column="account"/>
		<result property="pwd" column="pwd"/>
		<result property="name" column="name"/>
		<result property="sex" column="sex"/>
		<result property="age" column="age"/>
		<result property="idNumber" column="idNumber"/>
		<result property="phone" column="phone"/>
		<result property="student_state_id" column="student_state_id"/>
		<result property="school_id" column="school_id"/>
		<result property="schoolName" column="s_name"/>
		<result property="image" column="image"/>
		<result property="audit_results" column="audit_results"/>
	</resultMap>

<!--获取学员信息-->
	<select id="getStudentMsg" resultMap="studentMsg" parameterType="java.lang.Integer">
		select s1.*
		,s.name "s_name"
		from student s1
		left join school s on s1.school_id = s.id
		<where>
			s1.id=#{id}
		</where>
	</select>

<!--通过驾校id获取去学员数-->
	<select id="getStudentCountBySchoolId" resultType="java.lang.Integer"  parameterType="java.lang.Integer">
		select count(*) from student where school_id=#{id}
	</select>

<!--通过驾校id获取去教练数-->
	<select id="getCoachCountBySchoolId" resultType="java.lang.Integer"  parameterType="java.lang.Integer">
		select count(*) from coach where school_id=#{id}
	</select>

<!--通过驾校id获取去教练车数-->
	<select id="getCoachCarCountBySchoolId" resultType="java.lang.Integer"  parameterType="java.lang.Integer">
		select count(*) from coachcar where school_id=#{id}
	</select>

<!--封装教练车结果集-->
	<resultMap id="coachCarMap" type="com.great.entity.CoachCar">

		<id property="id" column="id"/>
		<result property="picture" column="picture"/>
		<result property="carNumber" column="carnumber"/>
		<result property="carState" column="state"/>
		<result property="school_id" column="school_id"/>
		<result property="coach_id" column="coach_id"/>
		<result property="coachName" column="coach_name"/>
		<result property="schoolName" column="school_name"/>

	</resultMap>

<!--获取教练车数-->
	<select id="getCoachCarCount" resultType="java.lang.Integer" parameterType="com.great.entity.TableUtils" >


		select count(*) from coachcar
		<where>
			<if test="name!=null">
				and  carnumber like concat('%',#{name},'%')
			</if>
			<if test="school_id!=null">
				and school_id = #{school_id}
			</if>
			<if test="state!=null">
				and state = #{state}
			</if>
		</where>
<!--&#45;&#45; 		limit #{minlimit} , #{maxlimit}-->

	</select>

<!--获取教练车列表-->
	<select id="getCoachCarTbl" resultMap="coachCarMap" parameterType="java.util.Map">
		select c.*,s.name "school_name",c2.name "coach_name"
		from coachcar c
		left join school s on c.school_id = s.id
		left join coach c2 on c.coach_id = c2.id
		<where>
			<if test="name!=null">
				and  carnumber like concat('%',#{name},'%')
			</if>
			<if test="state!=null">
				and school_id = #{state}
			</if>
			<if test="type!=null">
				and state = #{type}
			</if>
		</where>
		limit #{minlimit} , #{maxlimit}
	</select>

<!--更新学员审核-->
	<update id="examineStudent" parameterType="java.util.Map">
		update student
		set  audit_results= #{text} , student_state_id=#{i}
		where id=#{id};
	</update>

<!--更新驾校审核-->
	<update id="examineSchool" parameterType="java.util.Map">
		update school
		set  audit_results= #{text} , school_state_id=#{i}
		where id=#{id};
	</update>

	<!--更新驾校id查询到驾校对应的账号,为了去查到管理员表对应的账号-->
	<select id="findSchoolAccount" parameterType="java.lang.Integer" resultType="java.lang.String">
		select account from school
		where id=#{id};
	</select>

	<!--更新驾校审核的同时更新驾校管理员的状态(通过或不通过)-->
	<update id="examineSchoolAdmin" parameterType="java.util.Map">
		update schooladmin
		set  school_state_id=#{i}
		where account=#{account};
	</update>



<!--更新学员审核-->
	<update id="examineCoach" parameterType="java.util.Map">
		update coach
		set  audit_results= #{text} , coach_state_id=#{i}
		where id=#{id};
	</update>

<!--更新学员审核-->
	<update id="examineCoachCar" parameterType="java.util.Map">
		update coachcar
		set  audit_results= #{text} , state=#{i}
		where id=#{id};
	</update>

	<select id="getNoticeCount" parameterType="java.util.Map" resultType="java.lang.Integer" >
		select
		count(*)
		from notice
		<where>
			<if test="title!=null">
				and title like concat('%',#{title},'%')
			</if>
			<if test="date!=null">
				and time >= DATE_FORMAT(#{date}, '%Y-%m-%d')
			</if>
			<if test="type!=null">
				and type = #{type}
			</if>
		</where>
	</select>

	<select id="getNotice" parameterType="java.util.Map" resultType="com.great.entity.Notice" >
		select
		*
		from notice
		<where>
			<if test="title!=null and ''!=title">
				and title like concat('%',#{title},'%')
			</if>
			<if test="date!=null and ''!=date">
				and time >= DATE_FORMAT(#{date}, '%Y-%m-%d')
			</if>
			<if test="type!=null and ''!=type">
				and type = #{type}
			</if>
		</where>
		order by time desc limit #{minlimit} , #{maxlimit}
	</select>

	<select resultType="com.great.entity.Notice" id="getNoticeType">
		select distinct type from notice
	</select>

	<delete parameterType="integer" id="deleteNotice">
		delete from notice where id=#{id}
	</delete>

	<update parameterType="com.great.entity.Notice" id="updateNoticeMsg">
		update notice
		<set>
			<if test="title!=null">
				title=#{title}
			</if>
			<if test="content!=null">
				,content=#{content}
			</if>
			<if test="type!=null">
				,type=#{type}
			</if>
		</set>
		where id=#{id}
	</update>


    <select id="getNoticeMsg" resultType="com.great.entity.Notice" parameterType="java.lang.Integer">
		select
		*
		from notice
		where id=#{id}
	</select>



	<insert id="insertNotice" parameterType="com.great.entity.Notice">
		insert into
		notice (title, content, time, type)
		values (
		#{title},
		#{content},
		now(),
		#{type})
	</insert>

<!--封装测试时间结果集-->
	<resultMap id="examTime" type="com.great.entity.TestTime">
		<id property="id" column="id"/>
		<result property="start_time" column="start_time"/>
		<result property="end_time" column="end_time"/>
		<result property="school_id" column="school_id"/>
		<result property="school_name" column="s_name"/>
		<result property="color" column="color"/>

	</resultMap>
<!--获取考试配置时间-->
	<select id="getExamTime" resultMap="examTime">
		select ta.*,s.name "s_name"
		from test_allocation ta
		left join school s on ta.school_id = s.id;
	</select>

	<resultMap id="exTime" type="com.great.entity.TestTime">
		<id property="id" column="id"/>
		<result property="start_time" column="start_time"/>
		<result property="end_time" column="end_time"/>
		<result property="school_id" column="school_id"/>
		<result property="school_name" column="s_name"/>
		<result property="color" column="color"/>
	</resultMap>

	<select id="getExamTimeBySchoolId" resultMap="exTime" parameterType="java.lang.String">
		select ta.*,s.name "s_name"
		from test_allocation ta
		left join school s on ta.school_id = s.id
		where s.id=#{id};
	</select>

<!--插入时间-->
	<insert id="insertExamTime" parameterType="java.util.Map">
		insert into test_allocation (start_time, end_time, school_id, color)values (#{start},#{end},#{sid},#{scolor})
	</insert>

<!--更新时间配置-->
	<update id="updateExamTime" parameterType="java.util.Map">
		update test_allocation
		<set>
			start_time=#{start},end_time=#{end}
		</set>
		where id=#{id}
	</update>

<!--删除时间配置-->
	<delete id="deleteExamTime" parameterType="java.lang.Integer">
		delete from test_allocation where id=#{tid}
	</delete>


	<!--统计一阶段的人数-->
	<select id="CountSubject1" resultType="Integer"  >
		SELECT count(*) FROM student where student_state_id in (1,13)
	</select>
	<!--统计2阶段的人数-->
	<select id="CountSubject2" resultType="Integer" >
		SELECT count(*) FROM student where student_state_id in (2,14)
	</select>
	<!--统计3阶段的人数-->
	<select id="CountSubject3" resultType="Integer" >
		SELECT count(*) FROM student where student_state_id in (3,15)
	</select>
	<!--统计4阶段的人数-->
	<select id="CountSubject4" resultType="Integer" >
		SELECT count(*) FROM student where student_state_id in (4,16)
	</select>

	<!--统毕业的人数-->
	<select id="CountOver" resultType="Integer" >
		SELECT count(*) FROM student where student_state_id = 7
	</select>



<!--禁止学校	-->
	<update id="stopApplySchool" parameterType="java.util.Map">
		update school set school_state_id=#{state}
		<where>
			id=#{id}
		</where>
	</update>

	<!--禁止该学校的所有管理员账号	-->
	<update id="stopApplySchoolAdmin" parameterType="java.util.Map">
		update schooladmin set school_state_id=#{state}
		<where>
			school_id=#{id}
		</where>
	</update>

<!--禁止记录	-->
	<insert id="recordApply"  parameterType="java.util.Map">
		insert into punish (content, datetime, school_id, result)
		VALUES(
				  #{content},
				  #{date},
				  #{id},
				  #{result}
			  )
	</insert>

<!--封停学校	-->
	<update id="stopDoingSchool"  parameterType="java.util.Map">
		update school
		<set>
			school_state_id=2
		</set>
		<where>
			id=#{id}
		</where>
	</update>

	<!--封停学校的所有管理员	-->
	<update id="stopDoingSchoolAdmin"  parameterType="java.util.Map">
		update schooladmin
		<set>
			school_state_id=2
		</set>
		<where>
			school_id=#{id}
		</where>
	</update>

<!--封停教练	-->
	<update id="stopDoingCoach" parameterType="java.lang.Integer">
		update coach
		<set>
			coach_state_id=2
		</set>
		<where>
			id=#{id}
		</where>
	</update>

<!--封停记录-->
	<insert id="recordDoing" parameterType="java.util.Map">
		insert into punish (content, datetime, school_id, result)
		VALUES (
				  #{content},
				  #{date},
				  #{id},
				  #{result}
			  )
	</insert>

    <!--解禁驾校	-->
	<update id="relieveApplySchool" parameterType="java.util.Map">
		update school
		<set>
			school_state_id=3
		</set>
		<where>
			id=#{id}
		</where>
	</update>


	<!--解禁驾校管理员	-->
	<update id="relieveApplySchoolAdmin" parameterType="java.util.Map">
		update schooladmin
		<set>
			school_state_id=3
		</set>
		<where>
			school_id=#{id}
		</where>
	</update>


<!--解封驾校-->
	<update id="relieveDoingSchool" parameterType="java.util.Map">
		update school
		<set>
			school_state_id=3
		</set>
		<where>
			id=#{id}
		</where>
	</update>

	<!--解封驾校-->
	<update id="relieveDoingSchoolAdmin" parameterType="java.util.Map">
		update schooladmin
		<set>
			school_state_id=3
		</set>
		<where>
			school_id=#{id}
		</where>
	</update>


<!--解封教练-->
	<update id="relieveDoingCoach" parameterType="java.lang.Integer">
		update coach
		<set>
			coach_state_id=1
		</set>
		<where>
			id=#{id}
		</where>
	</update>

	<select id="getCoachBySchoolId" resultMap="coachMap" parameterType="java.lang.Integer">
		select c.*
		,s.id "s_id"
		,s.name "s_name"
		,s.admin "s_admin"
		,s.address "s_address"
		,s.information "s_information"
		,s.intro "s_intro"
		,s.phone "s_phone"
		,s.school_state_id "school_state_id"
		from coach c
		left join school s on c.school_id = s.id
		<where>
			c.id=#{id}
		</where>
	</select>

<!--封装违规-->
	<resultMap id="punishMap" type="com.great.entity.Punish">
		<id property="id" column="id"/>
		<result property="content" column="content"/>
		<result property="datetime" column="datetime"/>
		<result property="school_id" column="school_id"/>
		<result property="result" column="result"/>
		<result property="school_name" column="school_name"/>

	</resultMap>

<!--违规列表-->
	<select id="getPunishTable" resultMap="punishMap" parameterType="java.util.Map">

		select p.*,s.name "school_name"
		from punish p
		left join school s on s.id=p.school_id
		<where>
			<if test="time1 != '' and time1 != null">
				and p.datetime &gt;= #{time1}
			</if>
			<if test="time2 != '' and time2 != null">
				and p.datetime &lt;= #{time2}
			</if>
			and p.coach_id is null
		</where>
		limit #{minlimit} , #{maxlimit}
	</select>

<!--违规条数-->
	<select id="getPunishTabCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(*)
		from punish
		<where>
			<if test="time1 != '' and time1 != null">
				and punish.datetime &gt;= #{time1}
			</if>
			<if test="time2 != '' and time2 != null">
				and punish.datetime &lt;= #{time2}
			</if>
			and coach_id is null
		</where>

	</select>

<!--删除违规记录-->
	<delete id="deletePunish" parameterType="java.lang.Integer">
		delete from punish where id=#{id}
	</delete>


<!--封装预约类-->
	<resultMap id="appointMap" type="com.great.entity.AppointTest">
		<id property="id" column="id"/>
		<result property="timeId" column="timeId"/>
		<result property="studentId" column="studentId"/>
		<result property="subjectId" column="subjectId"/>
		<result property="appointStateId" column="appointStateId"/>
		<result property="studentName" column="studentName"/>
		<result property="studentSex" column="studentSex"/>
		<result property="studentAge" column="studentAge"/>
		<result property="studentPhone" column="studentPhone"/>
		<result property="subjectName" column="subjectName"/>
		<result property="dateTime" column="dateTime"/>
		<result property="schoolName" column="schoolName"/>
 	</resultMap>

<!--获取预约条数-->
	<select id="getAppointCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(*)
		from appoint_time_relation atr
		left join student s2 on atr.student_id = s2.id
		left join school s3 on s2.school_id = s3.id
		<where>
			<if test="id != null">
				s3.id=#{id}
			</if>
			 and atr.appoint_state_id=4
		</where>

	</select>

<!--获取预约记录-->
	<select id="getAppointTbl" resultMap="appointMap" parameterType="java.util.Map">
		select
		       atr.id,
		       atr.time_id "timeId",
		       atr.student_id "studentId",
			   t.subject_id "subjectId",
		       atr.appoint_state_id "appointStateId",
		       s2.name "studentName",
		       s2.sex "studentSex",
		       s2.age "studentAge",
		       s2.phone "studentPhone",
		       s.name "subjectName",
		       t.datetime "dateTime",
		       s3.name "schoolName"
		from appoint_time_relation atr
		left join time t on atr.time_id = t.id
		left join subject s on t.subject_id = s.id
		left join student s2 on atr.student_id = s2.id
		left join appoint_state as1 on atr.appoint_state_id = as1.id
		left join school s3 on s2.school_id = s3.id
		<where>
			<if test="id != null">
				s3.id=#{id}
			</if>
			and atr.appoint_state_id=4
		</where>
		limit #{minlimit} , #{maxlimit}


	</select>



<!--更新预约状态-->
	<update id="auditAppoint" parameterType="java.util.Map">
		update appoint_time_relation
		<set>
			appoint_state_id=#{state}
		</set>
		<where>
			id=#{id}
		</where>
	</update>

	<!--判断是否已经预约改为0-->
	<update id="AppointNo" parameterType="java.lang.Integer">
		update student
		<set>
			hasordered=0
		</set>
		<where>
			id=#{id}
		</where>
	</update>

	<!--把学员状态改成考试中的状态-->
	<update id="AppointYes" parameterType="java.util.Map">
		update student
		<set>
		student_state_id= #{student_state_id}
		</set>
		<where>
			id=#{id}
		</where>
	</update>



	<!--获取预约条数-->
	<select id="getSchoolUrl" resultType="com.great.entity.School" parameterType="java.lang.Integer">
		select * from school where id = #{id}
	</select>


	<!--插入成绩-->
	<insert id="insertScoreByExcel">
		insert into score
		(student_id,subject_id,appoint_time_relation_id,score)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.studentId},
			#{item.subjectId},
			#{item.TestId},
			#{item.score}
			)
		</foreach>
	</insert>
</mapper>